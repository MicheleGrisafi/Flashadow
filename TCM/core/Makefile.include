


# '-c' Compile and assemble, but do not link.
# '-mdata-region=lower' the compiler assumes data is in the lower region of memory
ASSEMBLER_ARGS_CORE := -c -mmcu=msp430f5529 -mhwmult=f5series -I"$(INCLUDE_GCC)" -I"$(ROOT_DIR)" -I"$(COMPILER_INCLUDE_ORIGINAL)" \
-O3 -w -mlarge -mcode-region=none -mdata-region=none -Wl,--gc-sections -Wl,--no-relax -Wl,--disable-sec-transformation

ASSEMBLER_ARGS_CORE_SHADOW := -c -mmcu=msp430f5529 -mhwmult=f5series -I"$(INCLUDE_GCC)" -I"$(ROOT_DIR)" -I"$(COMPILER_INCLUDE_ORIGINAL)" \
-O3 -w -mlarge -mcode-region=none -mdata-region=none -Wl,--gc-sections -Wl,--no-relax -Wl,--disable-sec-transformation





#Existing dirs
COREOBJS_DIR = ./core/obj
CORESRC_DIR = ./core/src
EXTMODULES_SRC = ./core/ext_modules

#To be created
COREASM_DIR = ./core/asm
CORE_COMP_SRC_DIR = ./core/src_compile
CORE_COMP_SRC_DIR_SHADOW = ./core/src_compile/shadow



#Modules to be loaded into the TCM
CORE_OBJS += $(COREOBJS_DIR)/core.o
CORE_OBJS += $(COREOBJS_DIR)/virt_fun.o
CORE_OBJS += $(COREOBJS_DIR)/secureUpdate.o
CORE_OBJS += $(COREOBJS_DIR)/protected_isr.o
CORE_OBJS += $(COREOBJS_DIR)/secureContextSwitch.o



#CORE_OBJS += $(COREOBJS_DIR)/raHelperAsm.o
#CORE_OBJS += $(COREOBJS_DIR)/raHelper.o
#CORE_OBJS += $(COREOBJS_DIR)/remoteAttestation.o


# Create objects files without invoking the linker
# the following flags are not documented and, apparently, not needed... -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)"






$(COREOBJS_DIR)/%.o: $(COREASM_DIR)/%.s
	@echo 'Creating "$@" by building file: "$<"'
	@echo 'Invoking: GNU Compiler'
	$(COMPILER_ORIGINAL) $(ASSEMBLER_ARGS_CORE) -o"$@" "$<"
	@echo 'Finished building: "$<" --> "$@" created'
	@echo ' '



#Create assembly files
#TODO: use R7 libraries
$(COREASM_DIR)/%.s: $(CORE_COMP_SRC_DIR_SHADOW)/%.c
	@echo 'Creating ASM file: "$@" with NO R7 register for shadow stack'
	$(COMPILER_INSTRUMENTED) $(ASSEMBLER_ARGS_CORE_SHADOW) -ffixed-R8 -S -ffunction-sections -o"$@" "$<"
	@echo 'Finished creating: "$@"'
	@echo ' '


$(COREASM_DIR)/%.s: $(CORE_COMP_SRC_DIR)/%.c
	@echo 'Creating ASM file: "$@"'
	$(COMPILER_ORIGINAL) $(ASSEMBLER_ARGS_CORE) -S -ffunction-sections -o"$@" "$<"
	@echo 'Finished creating: "$@"'
	@echo ' '

	
